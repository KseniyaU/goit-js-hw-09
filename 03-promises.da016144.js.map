{"mappings":"qhBACA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAQC,SAASC,cAAc,uBAE/BC,GADOF,SAASC,cAAc,sBACtBD,SAASC,cAAc,yBACzBD,SAASC,cAAc,UAa/BE,iBAAiB,SAAS,KACTC,aAAY,KAC7B,IAAK,IAAIC,EAAI,EAAGA,EAAIH,EAAMI,MAAOD,IACZN,EAAMO,MAZPC,KAAKC,SAAW,GAEpCC,EAAAZ,GAASa,OAAOC,QAAQ,MAGxBF,EAAAZ,GAASa,OAAOE,QAAQ,KAOkB,GAEzCb,EAAMO,MAAM","sources":["src/js/03-promises.js"],"sourcesContent":["//npm i notiflix\nimport Notiflix from 'notiflix';\n\nconst delay = document.querySelector('input[name=\"delay\"]')//перша затримка в мілісекундах\nconst step = document.querySelector('input[name=\"step\"]')//крок збільшення затримки після першого промісу\nconst amout = document.querySelector('input[name=\"amount\"]')//кількість промісів яку необхідно створити\nconst btn = document.querySelector('button')//кнопка відправки\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    Notiflix.Notify.success(\"ok\")\n    // Fulfill\n  } else {\n    Notiflix.Notify.failure(\"be\")\n    // Reject\n  }\n}\nbtn.addEventListener('click', () => {\n  const intervalId = setInterval(() => {\n    for (let i = 0; i < amout.value; i++){\n      createPromise(i+1, delay.value + i*step)\n    }\n  }, delay.value)\n})\n\n// createPromise(2, 1500)\n//   .then(({ position, delay }) => {\n//     console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n//   })\n//   .catch(({ position, delay }) => {\n//     console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n//   });"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$delay","document","querySelector","$47d4ff9957288465$var$amout","addEventListener","setInterval","i","value","Math","random","$parcel$interopDefault","Notify","success","failure"],"version":3,"file":"03-promises.da016144.js.map"}